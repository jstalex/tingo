version: "3"

services:
  bot:
    image: robot:local
    container_name: bot
    environment:
      PG_NAME: postgres
      PG_USER: admin
      PG_PASSWORD: admin
      PG_HOST: db
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:14
    container_name: db
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "admin" ]
    ports:
      - '5432:5432'

  migrate:
    image: migrate:local
    container_name: migrate
    environment:
      PGDATABASE: postgres
      PGUSER: admin
      PGPASSWORD: admin
      PGHOST: db
      PGPORT: 5432
    depends_on:
      db:
        condition: service_healthy

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - '5050:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      db:
        condition: service_healthy

  prometheus:
    image: bitnami/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - "./prometheus.yaml:/etc/prometheus/prometheus.yml"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    depends_on:
      - cadvisor

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - '8080:8080'
    volumes:
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - db
      - bot

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    restart: unless-stopped
    ports:
      - '19100:9100'